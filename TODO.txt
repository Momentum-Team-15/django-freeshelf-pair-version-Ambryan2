TODO:
1)User model, registration and login
    [x]install django 
    [x]startproject and startapp
    [x]set up settings
        [x] admin
        [x] DIRS template
        [x] registration in installed apps & auth_user_model
        [x] DIRS css 
        v) ****debug?****
    [x] django-redux (reference class website)
    [x] user model (makemigrations and migrate)
    [x] check if login shows () from server w/ /admin
    [x] create 3 super_users one for each (had to rebuild orm so need to add 2 more supers)
2)MODELS that aren't User
    [x] Resources
        [x] title (char)
        [x] author (foreign key for author) (char)
        [x] description (textfield is the longer one)
        [x] url (text field w/db value of link for html/src)
        [x] created_at
        [x] updated_at
        [x] topic (foreign key that connects to categories class) charfield
        [x]**next step FK configuration**
        viii) define __str__ where appropriate (this is last)
        [x] favorites (booloeanfield)
        [x] User (foreign key to connect to user model)
        11) mediatype (foreign key)charfield
    b)topic (no s bc django adds that to the models)
        i) title
        ii) (slug??)
        iii) category specific URLs (e.g., /python would o nly have python stuff)
        iv) must be non-nullable
    c) author 
        i) name (charfield)
    d) media
        i) type (charfield)
3)manually input

4) Views, Templates, URLs (urls.py)
    A) build a homepage (index)
        i) view conditional based on login status
        ii) url
        iii) template
            -if content produce outcome, if nothing display no content
    B)We need a favorite page
    C)Individual pages for topics (python, html, JS)
     
5) import all the data
           
THINGS TO FIGURE OUT:
--how to store the url and connect to external url
--wth is a slug?
--figure out what makes for unique URL, app (as relates to slugs?)

least important step: 
--styling or css 

stretch:
--images for resources
--custom styling over package like bumba
--liking resources (possibly manytomany class)

CELEBRATE OUR WINS!
10.24.22
1. Setup project and app
2. Built our user models
3. Built other models!!!
4. Got index page up
5. Figured our next steps!



THINGS TO REVIEW 10/24 EVENING:
data migration links info
__str__
look at sample data
